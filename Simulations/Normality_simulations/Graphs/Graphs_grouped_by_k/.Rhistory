# GOAL doing some report on the HIGH-dimensional server experiment --------
# http://www.sthda.com/english/wiki/ggplot2-themes-and-background-colors-the-3-elements
# interesting themes
# 11/5
library(dplyr)
library("xlsx")
library(tidyverse)
require(gridExtra)
plot_barplot_g = function( Dataset, ymin_ = 0, ymax_ = 1,size = 35){
if (sum(Dataset$Median_AUC+ Dataset$sd > 1) > 0){
ymax_ = 1.05
} #else {ymax_ = 1}
# png(name, width = width, height = height, units='mm', res = 300)
ggplot(Dataset, aes(fill=group, y=Median_AUC, x=K)) +
geom_bar(position="dodge", stat="identity")+
labs(y= "Median AUC", fill = "")+ #, x = "x axis name")
geom_errorbar(aes(ymin=(Median_AUC-sd), ymax=(Median_AUC+sd)), width = 0.3, position = position_dodge(0.9))+
# ylim(ymin_,ymax_)+
coord_cartesian(ylim=c(ymin_,ymax_))+
theme_bw(base_size = 17, base_line_size = 1.1)+
# theme_dark()+
# theme_classic(base_size = 17, base_line_size = 1.1)+
theme(axis.text=element_text(face="bold"),
axis.title=element_text(face="bold"), title = element_text(face = "bold",),legend.key.size = unit(1, 'cm'),text = element_text(size = size),legend.position="top")
# dev.off()
}
plot_barplot_g_nosd = function( Dataset, ymin_ = 0, ymax_ = 1, size = 35){
# png(name, width = width, height = height, units='mm', res = 300)
ggplot(Dataset, aes(fill=group, y=Median_AUC, x=K)) +
geom_bar(position="dodge", stat="identity")+
labs(y= "Median AUC", fill = "")+ #, x = "x axis name")
# geom_errorbar(aes(ymin=(Median_AUC-sd), ymax=(Median_AUC+sd)), width = 0.3, position = position_dodge(0.9))+
# ylim(ymin_,ymax_)+
coord_cartesian(ylim=c(ymin_,ymax_))+
theme_bw(base_size = 17, base_line_size = 1.1)+
# theme_dark()+
# theme_classic(base_size = 17, base_line_size = 1.1)+
theme(axis.text=element_text(face="bold"),
axis.title=element_text(face="bold"), title = element_text(face = "bold",),legend.key.size = unit(1, 'cm'),text = element_text(size = size),legend.position="top")
# dev.off()
}
plot_ggplot = function( Dataset, ymin_ = 0, ymax_ = 1){
ggplot(Dataset, aes(x=K, y=Median_AUC, group=group, color=group)) +
labs(y= "Median AUC", color = "")+ #, x = "x axis name") +
geom_line(size=2.5)+
ylim(ymin_,ymax_)+
geom_point(aes(stroke = 1.2),size = 6,show.legend = FALSE) +
geom_pointrange(aes(ymin=as.numeric(Median_AUC-sd), ymax=as.numeric(Median_AUC+sd)))+
geom_errorbar( mapping= aes(ymin=as.numeric(Median_AUC-sd), ymax=as.numeric(Median_AUC+sd)), width=0.2, size=1)+
# ggtitle("Performance 1 outlier")+#,"This is the graph for the best methods")+
theme_classic(base_size = 17, base_line_size = 1.1)+
# theme_bw(base_size = 17, base_line_size = 1.1)+
theme(axis.text=element_text(face="bold"),
axis.title=element_text(face="bold"), title = element_text(face = "bold",),legend.key.size = unit(1, 'cm'),text = element_text(size = 35),legend.position="top")
}
plot_ggplot_nosd = function( Dataset, ymin_ = 0, ymax_ = 1){
ggplot(Dataset, aes(x=K, y=Median_AUC, group=group, color=group)) +
labs(y= "Median AUC", color = "")+ #, x = "x axis name") +
geom_line(size=1.5)+
ylim(ymin_,ymax_)+
geom_point(aes(stroke = 1.2),size = 6,show.legend = FALSE) +
# geom_pointrange(aes(ymin=as.numeric(Median_AUC-sd), ymax=as.numeric(Median_AUC+sd)))+
# geom_errorbar( mapping= aes(ymin=as.numeric(Median_AUC-sd), ymax=as.numeric(Median_AUC+sd)), width=0.2, size=1)+
# ggtitle("Performance 1 outlier")+#,"This is the graph for the best methods")+
theme_classic(base_size = 17, base_line_size = 1.1)+
# theme_bw(base_size = 17, base_line_size = 1.1)+
theme(axis.text=element_text(face="bold"),
axis.title=element_text(face="bold"), title = element_text(face = "bold",),legend.key.size = unit(1, 'cm'),text = element_text(size = 35),legend.position="top")
}
plot_ggplot_nosd_ = function( Dataset, ymin_ = 0, ymax_ = 1){
ggplot(Dataset, aes(x=K, y=Median_AUC, group=group, color=group)) +
labs(y= "Median AUC", color = "")+ #, x = "x axis name") +
geom_line(size=2.5)+
ylim(ymin_,ymax_)+
geom_point(aes(stroke = 1.2),size = 8,show.legend = FALSE)+#,position=position_jitter(h=0.01,w=0)) +
# geom_pointrange(aes(ymin=as.numeric(Median_AUC-sd), ymax=as.numeric(Median_AUC+sd)))+
# geom_errorbar( mapping= aes(ymin=as.numeric(Median_AUC-sd), ymax=as.numeric(Median_AUC+sd)), width=0.2, size=1)+
# ggtitle("Performance 1 outlier")+#,"This is the graph for the best methods")+
theme_classic(base_size = 17, base_line_size = 1.1)+
# theme_bw(base_size = 17, base_line_size = 1.1)+
theme(axis.text=element_text(face="bold"),
axis.title=element_text(face="bold"), title = element_text(face = "bold",),legend.key.size = unit(1, 'cm'),text = element_text(size = 35),legend.position="top")
}
plot_ggplot_nosd_trasp = function( Dataset, ymin_ = 0, ymax_ = 1){
ggplot(Dataset, aes(x=K, y=Median_AUC, group=group, color=group)) +
labs(y= "Median AUC", color = "")+ #, x = "x axis name") +
geom_line(size=2.5, alpha = 0.8)+
ylim(ymin_,ymax_)+
geom_point(aes(stroke = 1.2),size = 8,show.legend = FALSE, alpha = 0.5)+#,position=position_jitter(h=0.01,w=0)) +
# geom_pointrange(aes(ymin=as.numeric(Median_AUC-sd), ymax=as.numeric(Median_AUC+sd)))+
# geom_errorbar( mapping= aes(ymin=as.numeric(Median_AUC-sd), ymax=as.numeric(Median_AUC+sd)), width=0.2, size=1)+
# ggtitle("Performance 1 outlier")+#,"This is the graph for the best methods")+
theme_classic(base_size = 17, base_line_size = 1.1)+
# theme_bw(base_size = 17, base_line_size = 1.1)+
theme(axis.text=element_text(face="bold"),
axis.title=element_text(face="bold"), title = element_text(face = "bold",),legend.key.size = unit(1, 'cm'),text = element_text(size = 35),legend.position="top")
}
# Data importing ----------------------------------------------------------
set.seed(123)
setwd("C:/Users/fmelo/Documents/GitHub/Sign_ISN/Simulations/Normality_simulations/Code/")
data_path = "C:/Users/fmelo/Documents/GitHub/Sign_ISN/Simulations/Normality_simulations/Data"
result_path =
setwd(data_path)
data_path = "C:/Users/fmelo/Documents/GitHub/Sign_ISN/Simulations/Normality_simulations/Data"
result_path =
setwd(data_path)
Results_all_methods200 <- read.csv("Results_all_methods200.txt")
Res = Results_all_methods200[,2:ncol(Results_all_methods200)]
colnames(Res) = c("N_obs", "N_out", "k", "same_distrib", colnames(Res)[1:29])
head(Res)
median_glob = apply(Res, 2, function(x) median(x, na.rm = T))
median_glob = round(median_glob,3)
mean_glob = apply(Res, 2, function(x) mean(x, na.rm = T))
mean_glob = round(mean_glob,3)
result_path = "C:/Users/fmelo/Documents/GitHub/Sign_ISN/Simulations/Normality_simulations/Graphs/Graphs_grouped_by_k/"
setwd(data_path)
Results_all_methods200 <- read.csv("Results_all_methods200.txt")
Res = Results_all_methods200[,2:ncol(Results_all_methods200)]
colnames(Res) = c("N_obs", "N_out", "k", "same_distrib", colnames(Res)[1:29])
head(Res)
median_glob = apply(Res, 2, function(x) median(x, na.rm = T))
median_glob = round(median_glob,3)
mean_glob = apply(Res, 2, function(x) mean(x, na.rm = T))
mean_glob = round(mean_glob,3)
# beware: not for every method each setting is available
setwd(result_path)
dd = data.frame(rbind(median_glob, mean_glob))
dd
my.df1 = Res
BY_n_obs = tibble::as_tibble(my.df1) %>%
mutate(Type=NA, Size=NA) %>%
bind_rows(my.df1) %>%
group_by(N_obs) %>%
summarise_all(c("mean", "sd"),na.rm = TRUE)
BY_n_obs = tibble::as_tibble(my.df1) %>%
mutate(Type=NA, Size=NA) %>%
bind_rows(my.df1) %>%
group_by(N_obs) %>%
summarise_all(c("mean", "sd"),na.rm = TRUE)
## gg plot of two examples
BY_n_obs = tibble::as_tibble(my.df1) %>%
mutate(Type=NA, Size=NA) %>%
bind_rows(my.df1) %>%
group_by(k) %>%
summarise_all(c("mean"),na.rm = TRUE)
Mean_obs =unlist(BY_n_obs%>%select(-c(N_obs,k,same_distrib,N_out,Type,Size)))
mean_database = data.frame("K"=rep(BY_n_obs$k, length(Mean_obs)/7), "Median_AUC" = Mean_obs, "group"=gsub(".[0-9]","",names(Mean_obs)))
BY_n_obs_sd = tibble::as_tibble(my.df1) %>%
mutate(Type=NA, Size=NA) %>%
bind_rows(my.df1) %>%
group_by(k) %>%
summarise_all(c("sd"),na.rm = TRUE)
SD_obs =unlist(BY_n_obs_sd%>%select(-c(N_obs,k,same_distrib,N_out,Type,Size)))
global_database = cbind(mean_database, "sd"= SD_obs)
global_database$K = as.factor(global_database$K)
global_database$group = as.factor(global_database$group)
METHODS_dataset = c("auc.roc_cook_max" ,"auc.roc_cook_med","auc.roc_optics_k", "auc.roc_KNN_sqrt_N")
METHODS_avg_dataset = global_database[global_database$group %in% METHODS_dataset,]
colnames(METHODS_avg_dataset)
METHODS_avg_dataset$group = ((as.character(METHODS_avg_dataset$group)))
# METHODS_avg_dataset$group[METHODS_avg_dataset$group == "auc_DPC"] == as.factor("auc.roc_SSN")
METHODS_avg_dataset$group[METHODS_avg_dataset$group == "auc.roc_KNN_sqrt_N"] = "kNN"
METHODS_avg_dataset$group[METHODS_avg_dataset$group == "auc.roc_optics_k"] = "OPTICS"
METHODS_avg_dataset$group[METHODS_avg_dataset$group == "auc.roc_cook_med"] = "Cook's med"
